<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CButton10.SideImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TRSoAAAAAElFTkSuQmCC
</value>
  </data>
</root>